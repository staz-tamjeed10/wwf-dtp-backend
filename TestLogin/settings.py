"""
Django settings for TestLogin project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-fnx9*qyi)g6**&0wsbn*w@o(f2e!mbhr9vpid48lu))u#v5jba'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    # 'jet.dashboard',
    # 'jet',
    'django.contrib.admin',
    'django.contrib.auth',
    'django_admin_listfilter_dropdown',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'drf_spectacular',
    'corsheaders',
    'myapp',
    'widget_tweaks',
    "welc.apps.WelcConfig",
    "qrcode_data.apps.QrcodeDataConfig"
]

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Digital Traceability Platform APIs',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

# JET_INDEX_DASHBOARD = 'welc.dashboard.CustomIndexDashboard'
# JET_THEMES = [
#     {'theme': 'default', 'color': '#47BAC1', 'title': 'Default'},
#     {'theme': 'green', 'color': '#44B78B', 'title': 'Green'},
#     {'theme': 'light-green', 'color': '#2FAA60', 'title': 'Light Green'},
# ]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'TestLogin.urls'

CORS_ALLOW_ALL_ORIGINS = True  # For dev
# or
# CORS_ALLOWED_ORIGINS = ["http://localhost:3000"]
CORS_EXPOSE_HEADERS = ['Content-Disposition']

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # This line is crucial
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TestLogin.wsgi.application'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "userinfo",
        "USER": "root",
        "PASSWORD": "imal12345",
        "HOST": "localhost",
        "PORT": "3306",
        'OPTIONS': {
            'init_command': "SET time_zone='+05:00'",
        },
    },
    "pamco": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "blissoni_newMis",
        "USER": "blissoni_pitb",
        "PASSWORD": "P@mco@pitb@0011",
        "HOST": "208.73.202.147",
        "PORT": "3306",
        "OPTIONS": {
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
            "charset": "utf8mb4",  # Ensures proper character encoding
            "use_unicode": True,
        },
        "CONN_MAX_AGE": 60,  # Keeps connections alive for better performance
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# settings.py
TIME_ZONE ='UTC'# Replace with your desired timezone
USE_TZ = True
USE_L10N = True
USE_I18N = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # <- Add this line

CSRF_TRUSTED_ORIGINS = ["https://leather.ttlogix.com", 'https://ret.bijlicity.com', 'https://www.ret.bijlicity.com',]
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DATABASE_ROUTERS = ['welc.routers.PrimaryReplicaRouter']

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'tamjeed.dev@gmail.com'
EMAIL_HOST_PASSWORD = 'ggcc gtak rhuf bhuu'  # Use App Password, not your regular password
DEFAULT_FROM_EMAIL = 'tamjeed.dev@gmail.com'
SERVER_EMAIL = 'tamjeed.dev@gmail.com'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}
